# Generated by Django 5.2 on 2025-08-02 20:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('campaigns', '0027_remove_npc_description_remove_npc_stat_block'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Enemy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enemy name or type', max_length=200)),
                ('size', models.CharField(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large'), ('huge', 'Huge'), ('gargantuan', 'Gargantuan')], default='medium', help_text="The creature's size category", max_length=20)),
                ('creature_type', models.CharField(choices=[('humanoid', 'Humanoid'), ('beast', 'Beast'), ('monstrosity', 'Monstrosity'), ('dragon', 'Dragon'), ('fey', 'Fey'), ('fiend', 'Fiend'), ('celestial', 'Celestial'), ('undead', 'Undead'), ('construct', 'Construct'), ('elemental', 'Elemental'), ('giant', 'Giant'), ('aberration', 'Aberration'), ('ooze', 'Ooze'), ('plant', 'Plant')], default='humanoid', help_text="The creature's type", max_length=20)),
                ('description', models.TextField(blank=True, help_text='Brief combat-relevant description or tactics notes')),
                ('armor_class', models.PositiveIntegerField(help_text='Armor Class (AC)')),
                ('hit_points', models.PositiveIntegerField(help_text='Maximum hit points')),
                ('hit_dice', models.CharField(blank=True, help_text='Hit dice formula (e.g., 2d8+2)', max_length=50)),
                ('speed', models.CharField(help_text='Movement speeds (e.g., 30 ft., fly 60 ft.)', max_length=100)),
                ('strength', models.PositiveIntegerField(default=10, help_text='Strength score (1-30)')),
                ('dexterity', models.PositiveIntegerField(default=10, help_text='Dexterity score (1-30)')),
                ('constitution', models.PositiveIntegerField(default=10, help_text='Constitution score (1-30)')),
                ('intelligence', models.PositiveIntegerField(default=10, help_text='Intelligence score (1-30)')),
                ('wisdom', models.PositiveIntegerField(default=10, help_text='Wisdom score (1-30)')),
                ('charisma', models.PositiveIntegerField(default=10, help_text='Charisma score (1-30)')),
                ('challenge_rating', models.CharField(help_text='Challenge Rating (e.g., 1/2, 2, 5)', max_length=10)),
                ('proficiency_bonus', models.PositiveIntegerField(default=2, help_text='Proficiency bonus (+2 to +9)')),
                ('saving_throws', models.CharField(blank=True, help_text='Proficient saving throws (e.g., Dex +5, Wis +3)', max_length=200)),
                ('skills', models.CharField(blank=True, help_text='Proficient skills (e.g., Perception +5, Stealth +7)', max_length=300)),
                ('damage_resistances', models.CharField(blank=True, help_text='Damage resistances (e.g., fire, cold)', max_length=200)),
                ('damage_immunities', models.CharField(blank=True, help_text='Damage immunities (e.g., poison, necrotic)', max_length=200)),
                ('condition_immunities', models.CharField(blank=True, help_text='Condition immunities (e.g., charmed, frightened)', max_length=200)),
                ('senses', models.CharField(blank=True, help_text='Special senses (e.g., darkvision 60 ft., passive Perception 13)', max_length=200)),
                ('special_abilities', models.TextField(blank=True, help_text='Special abilities, traits, and features for combat')),
                ('actions', models.TextField(blank=True, help_text='Available actions in combat')),
                ('legendary_actions', models.TextField(blank=True, help_text='Legendary actions (if applicable)')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enemies', to='campaigns.campaign')),
                ('encounters', models.ManyToManyField(blank=True, help_text='Encounters where this enemy appears', related_name='enemies', to='campaigns.encounter')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enemies', to=settings.AUTH_USER_MODEL)),
                ('source_npc', models.ForeignKey(blank=True, help_text='Source NPC if this enemy was converted from an NPC', null=True, on_delete=django.db.models.deletion.SET_NULL, to='campaigns.npc')),
            ],
            options={
                'verbose_name': 'Enemy',
                'verbose_name_plural': 'Enemies',
                'ordering': ['name'],
            },
        ),
    ]
