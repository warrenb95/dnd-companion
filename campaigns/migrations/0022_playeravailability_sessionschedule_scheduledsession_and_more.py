# Generated by Django 5.2 on 2025-07-19 20:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('campaigns', '0021_campaigncollaborator'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PlayerAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=100)),
                ('character_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('availability_data', models.JSONField(default=dict)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Session Availability', max_length=200)),
                ('date_range_start', models.DateField(help_text='Start of the date range for potential sessions')),
                ('date_range_end', models.DateField(help_text='End of the date range for potential sessions')),
                ('session_duration', models.PositiveIntegerField(default=4, help_text='Expected session duration in hours')),
                ('shareable_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('collecting', 'Collecting Responses'), ('ready', 'Ready to Schedule'), ('scheduled', 'Session Scheduled'), ('completed', 'Session Completed'), ('cancelled', 'Cancelled')], default='collecting', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes for players')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_schedules', to='campaigns.campaign')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_schedules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_datetime', models.DateTimeField()),
                ('duration_hours', models.PositiveIntegerField(default=4)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('tentative', 'Tentative'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='confirmed', max_length=20)),
                ('session_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('participants', models.ManyToManyField(blank=True, to='campaigns.playeravailability')),
                ('session_schedule', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_session', to='campaigns.sessionschedule')),
            ],
            options={
                'ordering': ['scheduled_datetime'],
            },
        ),
        migrations.AddField(
            model_name='playeravailability',
            name='session_schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_availabilities', to='campaigns.sessionschedule'),
        ),
        migrations.AlterUniqueTogether(
            name='playeravailability',
            unique_together={('session_schedule', 'email')},
        ),
    ]
